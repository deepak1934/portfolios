/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
"use client";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

const Wizard = React.memo(function Wizard(props) {
  // Use React.memo for performance optimization
  const group = useRef();
  const { nodes, materials } = useGLTF('models/scene.glb');

  // Adjusting position and scale example
  useFrame(() => {
    // Example: Rotate the group
    group.current.rotation.y += 0;
   
  });

  return (
    <group ref={group} {...props} dispose={null} position={[0, -2, 0]} scale={[0.8 ,0.8, 0.8]}>
      <group name="Scene">
        <group name="scene-transformedglb">
          <primitive object={nodes._rootJoint} />
          <skinnedMesh
            name="Object_575"
            geometry={nodes.Object_575.geometry}
            material={materials['tex2_3.png']}
            skeleton={nodes.Object_575.skeleton}
            rotation={[-Math.PI / 2, 0, 0]}
          />
          <skinnedMesh
            name="Object_576"
            geometry={nodes.Object_576.geometry}
            material={materials['tex2_2.png']}
            skeleton={nodes.Object_576.skeleton}
            rotation={[-Math.PI / 2, 0, 0]}
          />
          <skinnedMesh
            name="Object_577"
            geometry={nodes.Object_577.geometry}
            material={materials['tex1_1.png_tex1_1.png']}
            skeleton={nodes.Object_577.skeleton}
            rotation={[-Math.PI / 2, 0, 0]}
          />
          <skinnedMesh
            name="Object_578"
            geometry={nodes.Object_578.geometry}
            material={materials['tex2_4.png']}
            skeleton={nodes.Object_578.skeleton}
            rotation={[-Math.PI / 2, 0, 0]}
          />
          <skinnedMesh
            name="Object_579"
            geometry={nodes.Object_579.geometry}
            material={materials.Outline}
            skeleton={nodes.Object_579.skeleton}
            rotation={[-Math.PI / 2, 0, 0]}
          />
          <primitive object={nodes._rootJoint_1} />
          <skinnedMesh
            name="Object_1152"
            geometry={nodes.Object_1152.geometry}
            material={materials['tex01.png']}
            skeleton={nodes.Object_1152.skeleton}
            rotation={[-Math.PI / 2, 0, 0]}
          />
          <skinnedMesh
            name="Object_1153"
            geometry={nodes.Object_1153.geometry}
            material={materials['face.png']}
            skeleton={nodes.Object_1153.skeleton}
            rotation={[-Math.PI / 2, 0, 0]}
          />
          <skinnedMesh
            name="Object_1154"
            geometry={nodes.Object_1154.geometry}
            material={materials['hands.png']}
            skeleton={nodes.Object_1154.skeleton}
            rotation={[-Math.PI / 2, 0, 0]}
          />
          <skinnedMesh
            name="Object_1155"
            geometry={nodes.Object_1155.geometry}
            material={materials['tex02.png']}
            skeleton={nodes.Object_1155.skeleton}
            rotation={[-Math.PI / 2, 0, 0]}
          />
          <skinnedMesh
            name="Object_1156"
            geometry={nodes.Object_1156.geometry}
            material={materials['palms.png']}
            skeleton={nodes.Object_1156.skeleton}
            rotation={[-Math.PI / 2, 0, 0]}
          />
          <skinnedMesh
            name="Object_1157"
            geometry={nodes.Object_1157.geometry}
            material={materials.Outline}
            skeleton={nodes.Object_1157.skeleton}
            rotation={[-Math.PI / 2, 0, 0]}
          />
        </group>
      </group>
    </group>
  );
});

export default Wizard;

useGLTF.preload("/models/scene.glb");
